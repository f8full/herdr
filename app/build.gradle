plugins {
    //TODO: this should be synced with the kotlinVersion ext from root gradle file
    id("org.jetbrains.kotlin.multiplatform") //version "$kotlinVersion"
    id("org.jetbrains.kotlin.kapt") //version "$kotlinVersion"
    //TODO: use kotlinx serialization with Ktor
    id("org.jetbrains.kotlin.plugin.serialization") version "$kotlinVersion"
    id("com.squareup.sqldelight")
    id("com.android.application")
}
repositories {
    google()
    jcenter()
    mavenCentral()
}

dependencies {
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //Eurk! See: https://github.com/icerockdev/moko-mvvm/commit/bc34f2f019b55689df1bf411e13c5272151f139d#diff-7fcaab89343780d7e4c6e3ed99266fcd
    // fix of package javax.annotation does not exist import javax.annotation.Generated in DataBinding code
    compileOnly("javax.annotation:jsr250-api:1.0")
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId 'com.ludoscity.herdr'
        minSdkVersion 23
        //noinspection OldTargetApi
        targetSdkVersion 29
        versionCode 1
        versionName 'herdr-1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.ludoscity.herdr'
        ]
    }
    buildTypes {
        //breaks if variants are added here
        /*alpha {
            versionNameSuffix '-alpha0'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DATABASE_NAME", "\"herdr-database.db\""
        }
        beta {
            versionNameSuffix '-beta0'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DATABASE_NAME", "\"herdr-database.db\""
        }*/
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DATABASE_NAME", "\"herdr-database.db\""
        }

        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            //signingConfig signingConfigs.debug
            debuggable true
            buildConfigField "String", "DATABASE_NAME", "\"herdr-database-debug.db\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
        exclude 'META-INF/*.kotlin_module'
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "app_version_name", variant.versionName
    }

    //?? https://stackoverflow.com/a/60034786
    //Gradle issue appeared after adding Kodein usage in Android module
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    // Enables data binding.
    buildFeatures {
        dataBinding = true
    }
}


kotlin {
    targets {
        android("android")
        // This is for iPhone emulator
        // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
        iosX64("ios") {
            binaries {
                framework()
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-common'

                // COROUTINES
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"

                // MOKO - MVVM
                implementation "dev.icerock.moko:mvvm:$mokoMvvmVersion"

                // KOIN
                implementation "org.koin:koin-core:$koinVersion"

                // SERIALIZATION
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serializerVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:$serializerVersion"

                // DATE&TIME
                implementation "org.jetbrains.kotlinx:kotlinx-datetime:$dateTimeVersion"

                // KTOR
                implementation "io.ktor:ktor-client-core:$ktorVersion"
                implementation "io.ktor:ktor-client-logging:$ktorVersion"
                implementation "io.ktor:ktor-client-json:$ktorVersion"
                implementation "io.ktor:ktor-client-serialization:$ktorVersion"

                // SQL Delight
                implementation "com.squareup.sqldelight:runtime:$sqlDelightVersion"

                //KERMIT
                api("co.touchlab:kermit:$kermitVersion")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.0"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:1.4.0"
                implementation fileTree(dir: 'libs', include: ['*.jar'])
                implementation "androidx.appcompat:appcompat:$appCompatVersion"
                implementation "androidx.fragment:fragment:$fragmentVersion"
                implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
                implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
                implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
                implementation "com.google.android.material:material:$materialDesignVersion"
                implementation "com.google.android.gms:play-services-location:$playServicesVersion"
                implementation "androidx.work:work-runtime-ktx:$workVersion"
                // Kotlin Anko
                implementation "org.jetbrains.anko:anko-commons:$ankoVersion"

                implementation "com.jaredrummler:android-device-names:$deviceNamesVersion"

                implementation "com.github.fondesa:kpermissions:$kpermissionsVersion"

                //Failed attempt at fixing `Kotlin plugin is applied to the project :app but we
                // cannot find the KaptTask. Make sure you apply the kotlin-kapt plugin because it
                // is necessary to use kotlin with data binding
                //when doing a Gradle Sync
                //kapt {"org.jetbrains.kotlin.kapt:kotlin-gradle-plugin:$kotlinVersion"}

                //secure local storage
                implementation "androidx.security:security-crypto:$securityCryptoVersion"

                //https://github.com/openid/AppAuth-Android
                implementation "net.openid:appauth:$appAuthVersion"

                // COROUTINES
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

                // MOKO - MVVM
                implementation "androidx.lifecycle:lifecycle-extensions:$androidxLifecycleVersion"

                // KTOR
                //implementation "io.ktor:ktor-client-core-jvm:$ktorVersion"
                implementation "io.ktor:ktor-client-json-jvm:$ktorVersion"
                implementation "io.ktor:ktor-client-android:$ktorVersion"
                implementation "io.ktor:ktor-client-logging-jvm:$ktorVersion"
                implementation "io.ktor:ktor-client-serialization-jvm:$ktorVersion"

                // SQL Delight
                implementation "com.squareup.sqldelight:android-driver:$sqlDelightVersion"
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain.dependencies {
            implementation("org.jetbrains.kotlin:kotlin-stdlib-common:1.3.70")

            // COROUTINE
            implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutineVersion")

            // SERIALIZATION
            //implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serializerVersion")

            //KTOR
            implementation("io.ktor:ktor-client-ios:$ktorVersion")
            //implementation("io.ktor:ktor-client-core-native:$ktorVersion")
            //implementation("io.ktor:ktor-client-logging-native:$ktorVersion")
            //implementation("io.ktor:ktor-client-json-native:$ktorVersion")
            implementation("io.ktor:ktor-client-serialization-native:$ktorVersion")

            // SQL Delight
            implementation "com.squareup.sqldelight:native-driver:$sqlDelightVersion"
        }
        iosTest {
        }
    }
}

// This task attaches native framework built from ios module to Xcode project
// (see iosApp directory). Don't run this task directly,
// Xcode runs this task itself during its build process.
// Before opening the project from iosApp directory in Xcode,
// make sure all Gradle infrastructure exists (gradle.wrapper, gradlew).
task copyFramework {
    def buildType = project.findProperty('kotlin.build.type') ?: 'DEBUG'
    def target = project.findProperty('kotlin.target') ?: 'ios'
    dependsOn kotlin.targets."$target".binaries.getFramework(buildType).linkTask

    doLast {
        def srcFile = kotlin.targets."$target".binaries.getFramework(buildType).outputFile
        def targetDir = getProperty('configuration.build.dir')
        copy {
            from srcFile.parent
            into targetDir
            include 'app.framework/**'
            include 'app.framework.dSYM'
        }
    }
}

sqldelight {
    HerdrDatabase {
        packageName = "com.ludoscity.herdr.common.data.database"
    }
}